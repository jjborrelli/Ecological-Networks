ggplot(web.props2) + geom_histogram(aes(x = N), binwidth = 5)
ggplot(web.props2) + geom_point(aes(x = N, y = C))
levels(s.ocean2$year[1])
require(igraph)
require(NetIndices)
require(reshape2)
require(ggplot2)
require(devtools)
require(vegan)
url <- "https://raw.github.com/jjborrelli/Ecological-Networks/master/Food%20Webs/Rscripts/web_functions.R"
source_url(url)
s.ocean <- read.csv("~/Downloads/diet.csv")
el.df <- data.frame(pred = s.ocean$PREDATOR_NAME, prey = s.ocean$PREY_NAME)
SOgraph <- graph.edgelist(unique(as.matrix(el.df[,1:2])))
SOadjacency <- get.adjacency(SOgraph, sparse = F)
so.ode <- as.character(s.ocean$OBSERVATION_DATE_END)
so.ode.split <- strsplit(so.ode, split = "/")
year <- c()
for(i in 1:length(so.ode.split)){
year[i] <- so.ode.split[[i]][3]
}
s.ocean2 <- cbind(s.ocean, year)
m2 <- split(s.ocean2, f = s.ocean2$year)
year.g <- list()
for (i in 1:length(levels(s.ocean2$year))){
el.df <- data.frame(pred = m2[[i]]$PREDATOR_NAME, prey = m2[[i]]$PREY_NAME)
g <- graph.edgelist(unique(as.matrix(el.df[,1:2])))
year.g[[i]] <- g
}
i=1
gind <- GenInd(get.adjacency(year.g[[i]], sparse = F))
diam <- diameter(year.g[[i]])
avpath <- average.path.length(year.g[[i]])
cluster <- transitivity(year.g[[i]])
cannibals <- sum(diag(get.adjacency(year.g[[i]], sparse = F)))
degrees <- degree(year.g[[i]], mode = "all")
indegrees <- degree(year.g[[i]], mode = "in")
outdegrees <- degree(year.g[[i]], mode = "out")
numBas <- length(indegrees[which(indegrees == 0)])
numTop <- length(outdegrees[which(outdegrees == 0)])
basal <- (numBas/gind$N) * 100
top <- (numTop/gind$N) * 100
int <- ((gind$N - (numBas + numTop))/gind$N) * 100
web.props <- data.frame(Year = levels(s.ocean2$year[i]), N = gind$N, L = gind$Ltot,
LD = gind$LD, C = gind$C, D = diam,
AvgPath = avpath, ClCoef = cluster, Can = cannibals, Bas = basal,
Top = top, Int = int)
web.props
numBas
numTop
basal
top
int
levels(s.ocean2$year[i])
s.ocean2$year
year
web.props <- data.frame(Year = levels(s.ocean2$year)[i], N = gind$N, L = gind$Ltot,
LD = gind$LD, C = gind$C, D = diam,
AvgPath = avpath, ClCoef = cluster, Can = cannibals, Bas = basal,
Top = top, Int = int)
web.props
require(igraph)
require(NetIndices)
require(reshape2)
require(ggplot2)
require(devtools)
require(vegan)
url <- "https://raw.github.com/jjborrelli/Ecological-Networks/master/Food%20Webs/Rscripts/web_functions.R"
source_url(url)
url <- "https://github.com/jjborrelli/Ecological-Networks/blob/master/FoodWebs/Rscripts/web_functions.R"
source_url(url)
url <- "https://raw.githubusercontent.com/jjborrelli/Ecological-Networks/master/FoodWebs/Rscripts/web_functions.R"
source_url(url)
s.ocean <- read.csv("http://esapubs.org/archive/ecol/E092/097/diet.csv")
el.df <- data.frame(pred = s.ocean$PREDATOR_NAME, prey = s.ocean$PREY_NAME)
SOgraph <- graph.edgelist(unique(as.matrix(el.df[,1:2])))
SOadjacency <- get.adjacency(SOgraph, sparse = F)
gind <- GenInd(SOadjacency)
tind <- TrophInd(SOadjacency)
diam <- diameter(SOgraph)
avpath <- average.path.length(SOgraph)
cluster <- transitivity(SOgraph)
cannibals <- sum(diag(SOadjacency))
degrees <- degree(SOgraph, mode = "all")
indegrees <- degree(SOgraph, mode = "in")
outdegrees <- degree(SOgraph, mode = "out")
numBas <- length(indegrees[which(indegrees == 0)])
numTop <- length(outdegrees[which(outdegrees == 0)])
basal <- (numBas/gind$N) * 100
top <- (numTop/gind$N) * 100
int <- ((gind$N - (numBas + numTop))/gind$N) * 100
web.props <- data.frame(N = gind$N, L = gind$Ltot, LD = gind$LD, C = gind$C, D = diam,
AvgPath = avpath, ClCoef = cluster, Can = cannibals, Bas = basal, Top = top, Int = int)
print(web.props)
qplot(tind$TL, binwidth = .25, geom = "histogram",
xlab = "Trophic Position", ylab = "Frequency")
qplot(tind$TL, binwidth = 1, geom = "histogram",
xlab = "Trophic Position", ylab = "Frequency")
qplot(tind$TL, binwidth = .25, geom = "histogram",
xlab = "Trophic Position", ylab = "Frequency")
degdisfit <- fitdistr(degrees, "lognormal")
degdispow <- power.law.fit(degrees, force.continuous = T)
dd <- ggplot(data.frame(degrees = degrees), aes(x = degrees))
dd <- dd + geom_histogram(aes(y=..density..), binwidth = 5, colour = "black", fill = "white")
sequ <- seq(1, 300, .25)
dd <- dd + geom_line(aes(x = sequ[1:1095],
y = dlnorm(sequ[1:1095], degdisfit[[1]][1], degdisfit[[1]][2])),
colour = "blue")
dd <- dd + geom_line(aes(x = sequ[1:1095], y = 20 * sequ[1:1095] ^ -degdispow$alpha, colour = "green"))
dd + scale_y_continuous(limits = c(0, 0.12)) + theme(legend.position = "none")
places <- read.csv("https://raw.githubusercontent.com/jjborrelli/Ecological-Networks/master/SouthernOcean/locationLEVELS.csv")
placesC <- c()
for(i in 1:228){
placesC[i] <- as.character(places[[1]][i])
}
m <- split(s.ocean, f = s.ocean$LOCATION)
location.g <- list()
for (i in 1:length(levels(s.ocean$LOCATION))){
el.df <- data.frame(pred = m[[i]]$PREDATOR_NAME, prey = m[[i]]$PREY_NAME)
g <- graph.edgelist(unique(as.matrix(el.df[,1:2])))
location.g[[i]] <- g
}
web.props1 <- data.frame()
for (i in 1:228){
gind <- GenInd(get.adjacency(location.g[[i]], sparse = F))
diam <- diameter(location.g[[i]])
avpath <- average.path.length(location.g[[i]])
cluster <- transitivity(location.g[[i]])
cannibals <- sum(diag(get.adjacency(location.g[[i]], sparse = F)))
degrees <- degree(location.g[[i]], mode = "all")
indegrees <- degree(location.g[[i]], mode = "in")
outdegrees <- degree(location.g[[i]], mode = "out")
numBas <- length(indegrees[which(indegrees == 0)])
numTop <- length(outdegrees[which(outdegrees == 0)])
basal <- (numBas/gind$N) * 100
top <- (numTop/gind$N) * 100
int <- ((gind$N - (numBas + numTop))/gind$N) * 100
web.props <- data.frame(N = gind$N, L = gind$Ltot, LD = gind$LD, C = gind$C, D = diam,
AvgPath = avpath, ClCoef = cluster, Can = cannibals, Bas = basal,
Top = top, Int = int)
web.props1 <- rbind(web.props1, web.props)
}
print(web.props1)
so.ode <- as.character(s.ocean$OBSERVATION_DATE_END)
so.ode.split <- strsplit(so.ode, split = "/")
year <- c()
for(i in 1:length(so.ode.split)){
year[i] <- so.ode.split[[i]][3]
}
s.ocean2 <- cbind(s.ocean, year)
m2 <- split(s.ocean2, f = s.ocean2$year)
year.g <- list()
for (i in 1:length(levels(s.ocean2$year))){
el.df <- data.frame(pred = m2[[i]]$PREDATOR_NAME, prey = m2[[i]]$PREY_NAME)
g <- graph.edgelist(unique(as.matrix(el.df[,1:2])))
year.g[[i]] <- g
}
par(mfrow = c(23, 2), mar = c(.01,.01,.01,.01))
for (i in 1:45){
plot.igraph(year.g[[i]], layout = layout.circle, edge.arrow.size = .5, vertex.label = NA,
vertex.size = 5)
text(0, 0, label = levels(s.ocean2$year)[i], cex = 2)
}
web.props2 <- data.frame()
for (i in 1:45){
gind <- GenInd(get.adjacency(year.g[[i]], sparse = F))
diam <- diameter(year.g[[i]])
avpath <- average.path.length(year.g[[i]])
cluster <- transitivity(year.g[[i]])
cannibals <- sum(diag(get.adjacency(year.g[[i]], sparse = F)))
degrees <- degree(year.g[[i]], mode = "all")
indegrees <- degree(year.g[[i]], mode = "in")
outdegrees <- degree(year.g[[i]], mode = "out")
numBas <- length(indegrees[which(indegrees == 0)])
numTop <- length(outdegrees[which(outdegrees == 0)])
basal <- (numBas/gind$N) * 100
top <- (numTop/gind$N) * 100
int <- ((gind$N - (numBas + numTop))/gind$N) * 100
web.props <- data.frame(Year = levels(s.ocean2$year)[i], N = gind$N, L = gind$Ltot,
LD = gind$LD, C = gind$C, D = diam,
AvgPath = avpath, ClCoef = cluster, Can = cannibals, Bas = basal,
Top = top, Int = int)
web.props2 <- rbind(web.props2, web.props)
}
print(web.props2)
web.props2[25:35,]
